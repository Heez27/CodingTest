# 그리디 Greedy 알고리즘(욕심쟁이 알고리즘)은 현재 상황에서 지금 당장 좋은 것만 고르는 방법
# 사전에 외우고 있지 않아도 풀 수 있을 가능성이 높은 문제 유형

# Q1) 당신은 편의점의 계산을 도와주는 점원이다.
# 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정한다.
# 손님에게 거슬러 줘야 할 돈이 N원일 때, 거슬러줘야 할 동전의 최소 개수를 구하라.
# 단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

# A1) 가장 큰 화폐 단위부터 돈을 거슬러 주기

N = int(input('손님에게 거슬러 줘야 할 돈: '))

# 큰 단위의 화폐부터 확인
coins = [500, 100, 50, 10]

count_coin = 0 # 동전의 갯수

for coin in coins:
    count_coin += N//coin # *조심하기* /는 결과가 실수, //는 결과가 정수
    print('%d원 동전은 %d개 필요하다. '%(coin, N//coin))
    N %= coin


print('\n총 필요한 동전 갯수는 %d개이다. '%(count_coin))

